// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {


    repositories {
        google()
        mavenCentral()

    }

    ext {
        versions = [

                recyclerview          : "1.2.1",
                recyclerviewSelection          : "1.1.0",

                androidCore          : "1.7.0",
                appCompat            : '1.4.1',
                material             : "1.5.0",
                constraintLyout      : '2.1.3',
                legacySupport        : "1.0.0",
                livedata             : '2.4.1',
                viewmodel            : '2.4.1',
                navigation           : '2.4.1',
                runtime              : '2.4.1',

                hilt                 : '2.41',
                hiltAnotationProcesor: "1.0.0",

                dataStore            : "1.0.0",

                coroutines           : "1.6.0",

                retrofit             : "2.9.0",
                retrofitgson         : "2.9.0",
                gson                 : "2.8.8",
                okhttpInterceptor    : "4.9.3",
                maps                 : "18.0.2",

                glide                : "4.13.0",

                room                 : "2.4.2",

                pinview                 : "1.4.4",
                protoDataStore                 : "1.0.0",
                protobuf                 : "3.18.0",
        ]

        common = [
                androidCore      : "androidx.core:core-ktx:$versions.androidCore",
                appCompat        : "androidx.appcompat:appcompat:$versions.appCompat",
                material         : "com.google.android.material:material:$versions.material",
                constraintLyout  : "androidx.constraintlayout:constraintlayout:$versions.constraintLyout",
                legacySupport    : "androidx.legacy:legacy-support-v4:$versions.legacySupport",

                livedata         : "androidx.lifecycle:lifecycle-livedata-ktx:$versions.livedata",
                viewmodel        : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.viewmodel",
                runtime          : "androidx.lifecycle:lifecycle-runtime-ktx:$versions.runtime",

                // Kotlin Coroutines
                coroutinesCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
                coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",

                datastore        : "androidx.datastore:datastore-preferences:$versions.dataStore",
                protoDataStore        : "androidx.datastore:datastore-core:$versions.protoDataStore",
                protobuf        : "com.google.protobuf:protobuf-javalite:$versions.protobuf",


                recyclerview          : "androidx.recyclerview:recyclerview:$versions.recyclerview",
                recyclerviewSelection          : "androidx.recyclerview:recyclerview-selection:$versions.recyclerviewSelection",

        ]

        room = [
                room        : "androidx.room:room-ktx:$versions.room",
                roomCompiler: "androidx.room:room-compiler:$versions.room"
        ]

        maps = [
                maps: "com.google.android.gms:play-services-maps:$versions.maps",

        ]

        navigation = [
                //NAVIGATION
                navigationUi      : "androidx.navigation:navigation-ui-ktx:$versions.navigation",
                navigationFragment: "androidx.navigation:navigation-fragment-ktx:$versions.navigation",
        ]

        daggerHilt = [
                hilt                  : "com.google.dagger:hilt-android:$versions.hilt",
                compiler              : "com.google.dagger:hilt-android-compiler:$versions.hilt",
                annotationProcessor   : "androidx.hilt:hilt-compiler:$versions.hiltAnotationProcesor",
                hiltLifecycleViewmodel: "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hiltLifecycleViewmodel",
        ]

        retrofit = [
                //RETROFIT
                retrofit         : "com.squareup.retrofit2:retrofit:$versions.retrofit",
                retrofitgson     : "com.squareup.retrofit2:converter-gson:$versions.retrofitgson",
                gson             : "com.google.code.gson:gson:$versions.gson",
                okhttpInterceptor: "com.squareup.okhttp3:logging-interceptor:$versions.okhttpInterceptor",
        ]

        others = [
                fresco: "com.facebook.fresco:fresco:$versions.fresco",
                glide : "com.github.bumptech.glide:glide:$versions.glide",
                pinview: "io.github.chaosleung:pinview:$versions.pinview"
        ]

    }

    dependencies {
        classpath("androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation")
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.3.0"
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath 'com.google.gms:google-services:4.3.13'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.1'
    }

}

plugins {
    id 'com.android.application' version '7.1.3' apply false
    id 'com.android.library' version '7.1.3' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.0' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.6.20' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}